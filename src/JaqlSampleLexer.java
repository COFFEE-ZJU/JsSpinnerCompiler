// Generated from JaqlSample.g4 by ANTLR 4.0
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class JaqlSampleLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__53=1, T__52=2, T__51=3, T__50=4, T__49=5, T__48=6, T__47=7, T__46=8, 
		T__45=9, T__44=10, T__43=11, T__42=12, T__41=13, T__40=14, T__39=15, T__38=16, 
		T__37=17, T__36=18, T__35=19, T__34=20, T__33=21, T__32=22, T__31=23, 
		T__30=24, T__29=25, T__28=26, T__27=27, T__26=28, T__25=29, T__24=30, 
		T__23=31, T__22=32, T__21=33, T__20=34, T__19=35, T__18=36, T__17=37, 
		T__16=38, T__15=39, T__14=40, T__13=41, T__12=42, T__11=43, T__10=44, 
		T__9=45, T__8=46, T__7=47, T__6=48, T__5=49, T__4=50, T__3=51, T__2=52, 
		T__1=53, T__0=54, TRUE=55, FALSE=56, NULL=57, ID=58, INT=59, STRING=60, 
		NEWLINE=61, WS=62;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'into'", "'min'", "'or'", "'['", "'*'", "'<'", "'!='", "'<='", "'range'", 
		"'by'", "'readFromWrapper'", "'}'", "'\"'", "'max'", "'->'", "')'", "'seconds'", 
		"'hours'", "'group'", "'='", "'dstream'", "'transform'", "'days'", "'rstream'", 
		"'rows'", "'filter'", "'window'", "'join'", "']'", "'each'", "'in'", "','", 
		"'-'", "':'", "'('", "'as'", "'sum'", "'[*].'", "'{'", "'and'", "'partitioned by'", 
		"'unbounded'", "'$'", "'avg'", "'.'", "'+'", "'minutes'", "'istream'", 
		"';'", "'>'", "'where'", "'=='", "'/'", "'>='", "'true'", "'false'", "'null'", 
		"ID", "INT", "STRING", "NEWLINE", "WS"
	};
	public static final String[] ruleNames = {
		"T__53", "T__52", "T__51", "T__50", "T__49", "T__48", "T__47", "T__46", 
		"T__45", "T__44", "T__43", "T__42", "T__41", "T__40", "T__39", "T__38", 
		"T__37", "T__36", "T__35", "T__34", "T__33", "T__32", "T__31", "T__30", 
		"T__29", "T__28", "T__27", "T__26", "T__25", "T__24", "T__23", "T__22", 
		"T__21", "T__20", "T__19", "T__18", "T__17", "T__16", "T__15", "T__14", 
		"T__13", "T__12", "T__11", "T__10", "T__9", "T__8", "T__7", "T__6", "T__5", 
		"T__4", "T__3", "T__2", "T__1", "T__0", "TRUE", "FALSE", "NULL", "ID", 
		"INT", "STRING", "NEWLINE", "WS"
	};


	public JaqlSampleLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "JaqlSample.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 61: WS_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip(); break;
		}
	}

	public static final String _serializedATN =
		"\2\4@\u01a4\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t"+
		"\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20"+
		"\t\20\4\21\t\21\4\22\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27"+
		"\t\27\4\30\t\30\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36"+
		"\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4"+
		"(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62"+
		"\t\62\4\63\t\63\4\64\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4"+
		":\t:\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3"+
		"\3\4\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3"+
		"\n\3\n\3\n\3\n\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f"+
		"\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\17\3\17\3\20\3"+
		"\20\3\20\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3"+
		"\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\26\3\26\3"+
		"\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3"+
		"\27\3\27\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3"+
		"\31\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3"+
		"\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\37\3"+
		"\37\3\37\3\37\3\37\3 \3 \3 \3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3%\3&\3&\3"+
		"&\3&\3\'\3\'\3\'\3\'\3\'\3(\3(\3)\3)\3)\3)\3*\3*\3*\3*\3*\3*\3*\3*\3*"+
		"\3*\3*\3*\3*\3*\3*\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3,\3,\3-\3-\3-\3-\3."+
		"\3.\3/\3/\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\61\3\61\3\61\3\61"+
		"\3\61\3\61\3\61\3\61\3\62\3\62\3\63\3\63\3\64\3\64\3\64\3\64\3\64\3\64"+
		"\3\65\3\65\3\65\3\66\3\66\3\67\3\67\3\67\38\38\38\38\38\39\39\39\39\3"+
		"9\39\3:\3:\3:\3:\3:\3;\3;\7;\u0186\n;\f;\16;\u0189\13;\3<\6<\u018c\n<"+
		"\r<\16<\u018d\3=\3=\7=\u0192\n=\f=\16=\u0195\13=\3=\3=\3>\5>\u019a\n>"+
		"\3>\3>\3?\6?\u019f\n?\r?\16?\u01a0\3?\3?\3\u0193@\3\3\1\5\4\1\7\5\1\t"+
		"\6\1\13\7\1\r\b\1\17\t\1\21\n\1\23\13\1\25\f\1\27\r\1\31\16\1\33\17\1"+
		"\35\20\1\37\21\1!\22\1#\23\1%\24\1\'\25\1)\26\1+\27\1-\30\1/\31\1\61\32"+
		"\1\63\33\1\65\34\1\67\35\19\36\1;\37\1= \1?!\1A\"\1C#\1E$\1G%\1I&\1K\'"+
		"\1M(\1O)\1Q*\1S+\1U,\1W-\1Y.\1[/\1]\60\1_\61\1a\62\1c\63\1e\64\1g\65\1"+
		"i\66\1k\67\1m8\1o9\1q:\1s;\1u<\1w=\1y>\1{?\1}@\2\3\2\5\4C\\c|\5\62;C\\"+
		"c|\5\13\f\17\17\"\"\u01a8\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2"+
		"\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2"+
		"\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3"+
		"\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2"+
		"\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67"+
		"\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2"+
		"\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2"+
		"\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]"+
		"\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2"+
		"\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2"+
		"\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\3\177\3\2\2\2\5\u0084\3\2"+
		"\2\2\7\u0088\3\2\2\2\t\u008b\3\2\2\2\13\u008d\3\2\2\2\r\u008f\3\2\2\2"+
		"\17\u0091\3\2\2\2\21\u0094\3\2\2\2\23\u0097\3\2\2\2\25\u009d\3\2\2\2\27"+
		"\u00a0\3\2\2\2\31\u00b0\3\2\2\2\33\u00b2\3\2\2\2\35\u00b4\3\2\2\2\37\u00b8"+
		"\3\2\2\2!\u00bb\3\2\2\2#\u00bd\3\2\2\2%\u00c5\3\2\2\2\'\u00cb\3\2\2\2"+
		")\u00d1\3\2\2\2+\u00d3\3\2\2\2-\u00db\3\2\2\2/\u00e5\3\2\2\2\61\u00ea"+
		"\3\2\2\2\63\u00f2\3\2\2\2\65\u00f7\3\2\2\2\67\u00fe\3\2\2\29\u0105\3\2"+
		"\2\2;\u010a\3\2\2\2=\u010c\3\2\2\2?\u0111\3\2\2\2A\u0114\3\2\2\2C\u0116"+
		"\3\2\2\2E\u0118\3\2\2\2G\u011a\3\2\2\2I\u011c\3\2\2\2K\u011f\3\2\2\2M"+
		"\u0123\3\2\2\2O\u0128\3\2\2\2Q\u012a\3\2\2\2S\u012e\3\2\2\2U\u013d\3\2"+
		"\2\2W\u0147\3\2\2\2Y\u0149\3\2\2\2[\u014d\3\2\2\2]\u014f\3\2\2\2_\u0151"+
		"\3\2\2\2a\u0159\3\2\2\2c\u0161\3\2\2\2e\u0163\3\2\2\2g\u0165\3\2\2\2i"+
		"\u016b\3\2\2\2k\u016e\3\2\2\2m\u0170\3\2\2\2o\u0173\3\2\2\2q\u0178\3\2"+
		"\2\2s\u017e\3\2\2\2u\u0183\3\2\2\2w\u018b\3\2\2\2y\u018f\3\2\2\2{\u0199"+
		"\3\2\2\2}\u019e\3\2\2\2\177\u0080\7k\2\2\u0080\u0081\7p\2\2\u0081\u0082"+
		"\7v\2\2\u0082\u0083\7q\2\2\u0083\4\3\2\2\2\u0084\u0085\7o\2\2\u0085\u0086"+
		"\7k\2\2\u0086\u0087\7p\2\2\u0087\6\3\2\2\2\u0088\u0089\7q\2\2\u0089\u008a"+
		"\7t\2\2\u008a\b\3\2\2\2\u008b\u008c\7]\2\2\u008c\n\3\2\2\2\u008d\u008e"+
		"\7,\2\2\u008e\f\3\2\2\2\u008f\u0090\7>\2\2\u0090\16\3\2\2\2\u0091\u0092"+
		"\7#\2\2\u0092\u0093\7?\2\2\u0093\20\3\2\2\2\u0094\u0095\7>\2\2\u0095\u0096"+
		"\7?\2\2\u0096\22\3\2\2\2\u0097\u0098\7t\2\2\u0098\u0099\7c\2\2\u0099\u009a"+
		"\7p\2\2\u009a\u009b\7i\2\2\u009b\u009c\7g\2\2\u009c\24\3\2\2\2\u009d\u009e"+
		"\7d\2\2\u009e\u009f\7{\2\2\u009f\26\3\2\2\2\u00a0\u00a1\7t\2\2\u00a1\u00a2"+
		"\7g\2\2\u00a2\u00a3\7c\2\2\u00a3\u00a4\7f\2\2\u00a4\u00a5\7H\2\2\u00a5"+
		"\u00a6\7t\2\2\u00a6\u00a7\7q\2\2\u00a7\u00a8\7o\2\2\u00a8\u00a9\7Y\2\2"+
		"\u00a9\u00aa\7t\2\2\u00aa\u00ab\7c\2\2\u00ab\u00ac\7r\2\2\u00ac\u00ad"+
		"\7r\2\2\u00ad\u00ae\7g\2\2\u00ae\u00af\7t\2\2\u00af\30\3\2\2\2\u00b0\u00b1"+
		"\7\177\2\2\u00b1\32\3\2\2\2\u00b2\u00b3\7$\2\2\u00b3\34\3\2\2\2\u00b4"+
		"\u00b5\7o\2\2\u00b5\u00b6\7c\2\2\u00b6\u00b7\7z\2\2\u00b7\36\3\2\2\2\u00b8"+
		"\u00b9\7/\2\2\u00b9\u00ba\7@\2\2\u00ba \3\2\2\2\u00bb\u00bc\7+\2\2\u00bc"+
		"\"\3\2\2\2\u00bd\u00be\7u\2\2\u00be\u00bf\7g\2\2\u00bf\u00c0\7e\2\2\u00c0"+
		"\u00c1\7q\2\2\u00c1\u00c2\7p\2\2\u00c2\u00c3\7f\2\2\u00c3\u00c4\7u\2\2"+
		"\u00c4$\3\2\2\2\u00c5\u00c6\7j\2\2\u00c6\u00c7\7q\2\2\u00c7\u00c8\7w\2"+
		"\2\u00c8\u00c9\7t\2\2\u00c9\u00ca\7u\2\2\u00ca&\3\2\2\2\u00cb\u00cc\7"+
		"i\2\2\u00cc\u00cd\7t\2\2\u00cd\u00ce\7q\2\2\u00ce\u00cf\7w\2\2\u00cf\u00d0"+
		"\7r\2\2\u00d0(\3\2\2\2\u00d1\u00d2\7?\2\2\u00d2*\3\2\2\2\u00d3\u00d4\7"+
		"f\2\2\u00d4\u00d5\7u\2\2\u00d5\u00d6\7v\2\2\u00d6\u00d7\7t\2\2\u00d7\u00d8"+
		"\7g\2\2\u00d8\u00d9\7c\2\2\u00d9\u00da\7o\2\2\u00da,\3\2\2\2\u00db\u00dc"+
		"\7v\2\2\u00dc\u00dd\7t\2\2\u00dd\u00de\7c\2\2\u00de\u00df\7p\2\2\u00df"+
		"\u00e0\7u\2\2\u00e0\u00e1\7h\2\2\u00e1\u00e2\7q\2\2\u00e2\u00e3\7t\2\2"+
		"\u00e3\u00e4\7o\2\2\u00e4.\3\2\2\2\u00e5\u00e6\7f\2\2\u00e6\u00e7\7c\2"+
		"\2\u00e7\u00e8\7{\2\2\u00e8\u00e9\7u\2\2\u00e9\60\3\2\2\2\u00ea\u00eb"+
		"\7t\2\2\u00eb\u00ec\7u\2\2\u00ec\u00ed\7v\2\2\u00ed\u00ee\7t\2\2\u00ee"+
		"\u00ef\7g\2\2\u00ef\u00f0\7c\2\2\u00f0\u00f1\7o\2\2\u00f1\62\3\2\2\2\u00f2"+
		"\u00f3\7t\2\2\u00f3\u00f4\7q\2\2\u00f4\u00f5\7y\2\2\u00f5\u00f6\7u\2\2"+
		"\u00f6\64\3\2\2\2\u00f7\u00f8\7h\2\2\u00f8\u00f9\7k\2\2\u00f9\u00fa\7"+
		"n\2\2\u00fa\u00fb\7v\2\2\u00fb\u00fc\7g\2\2\u00fc\u00fd\7t\2\2\u00fd\66"+
		"\3\2\2\2\u00fe\u00ff\7y\2\2\u00ff\u0100\7k\2\2\u0100\u0101\7p\2\2\u0101"+
		"\u0102\7f\2\2\u0102\u0103\7q\2\2\u0103\u0104\7y\2\2\u01048\3\2\2\2\u0105"+
		"\u0106\7l\2\2\u0106\u0107\7q\2\2\u0107\u0108\7k\2\2\u0108\u0109\7p\2\2"+
		"\u0109:\3\2\2\2\u010a\u010b\7_\2\2\u010b<\3\2\2\2\u010c\u010d\7g\2\2\u010d"+
		"\u010e\7c\2\2\u010e\u010f\7e\2\2\u010f\u0110\7j\2\2\u0110>\3\2\2\2\u0111"+
		"\u0112\7k\2\2\u0112\u0113\7p\2\2\u0113@\3\2\2\2\u0114\u0115\7.\2\2\u0115"+
		"B\3\2\2\2\u0116\u0117\7/\2\2\u0117D\3\2\2\2\u0118\u0119\7<\2\2\u0119F"+
		"\3\2\2\2\u011a\u011b\7*\2\2\u011bH\3\2\2\2\u011c\u011d\7c\2\2\u011d\u011e"+
		"\7u\2\2\u011eJ\3\2\2\2\u011f\u0120\7u\2\2\u0120\u0121\7w\2\2\u0121\u0122"+
		"\7o\2\2\u0122L\3\2\2\2\u0123\u0124\7]\2\2\u0124\u0125\7,\2\2\u0125\u0126"+
		"\7_\2\2\u0126\u0127\7\60\2\2\u0127N\3\2\2\2\u0128\u0129\7}\2\2\u0129P"+
		"\3\2\2\2\u012a\u012b\7c\2\2\u012b\u012c\7p\2\2\u012c\u012d\7f\2\2\u012d"+
		"R\3\2\2\2\u012e\u012f\7r\2\2\u012f\u0130\7c\2\2\u0130\u0131\7t\2\2\u0131"+
		"\u0132\7v\2\2\u0132\u0133\7k\2\2\u0133\u0134\7v\2\2\u0134\u0135\7k\2\2"+
		"\u0135\u0136\7q\2\2\u0136\u0137\7p\2\2\u0137\u0138\7g\2\2\u0138\u0139"+
		"\7f\2\2\u0139\u013a\7\"\2\2\u013a\u013b\7d\2\2\u013b\u013c\7{\2\2\u013c"+
		"T\3\2\2\2\u013d\u013e\7w\2\2\u013e\u013f\7p\2\2\u013f\u0140\7d\2\2\u0140"+
		"\u0141\7q\2\2\u0141\u0142\7w\2\2\u0142\u0143\7p\2\2\u0143\u0144\7f\2\2"+
		"\u0144\u0145\7g\2\2\u0145\u0146\7f\2\2\u0146V\3\2\2\2\u0147\u0148\7&\2"+
		"\2\u0148X\3\2\2\2\u0149\u014a\7c\2\2\u014a\u014b\7x\2\2\u014b\u014c\7"+
		"i\2\2\u014cZ\3\2\2\2\u014d\u014e\7\60\2\2\u014e\\\3\2\2\2\u014f\u0150"+
		"\7-\2\2\u0150^\3\2\2\2\u0151\u0152\7o\2\2\u0152\u0153\7k\2\2\u0153\u0154"+
		"\7p\2\2\u0154\u0155\7w\2\2\u0155\u0156\7v\2\2\u0156\u0157\7g\2\2\u0157"+
		"\u0158\7u\2\2\u0158`\3\2\2\2\u0159\u015a\7k\2\2\u015a\u015b\7u\2\2\u015b"+
		"\u015c\7v\2\2\u015c\u015d\7t\2\2\u015d\u015e\7g\2\2\u015e\u015f\7c\2\2"+
		"\u015f\u0160\7o\2\2\u0160b\3\2\2\2\u0161\u0162\7=\2\2\u0162d\3\2\2\2\u0163"+
		"\u0164\7@\2\2\u0164f\3\2\2\2\u0165\u0166\7y\2\2\u0166\u0167\7j\2\2\u0167"+
		"\u0168\7g\2\2\u0168\u0169\7t\2\2\u0169\u016a\7g\2\2\u016ah\3\2\2\2\u016b"+
		"\u016c\7?\2\2\u016c\u016d\7?\2\2\u016dj\3\2\2\2\u016e\u016f\7\61\2\2\u016f"+
		"l\3\2\2\2\u0170\u0171\7@\2\2\u0171\u0172\7?\2\2\u0172n\3\2\2\2\u0173\u0174"+
		"\7v\2\2\u0174\u0175\7t\2\2\u0175\u0176\7w\2\2\u0176\u0177\7g\2\2\u0177"+
		"p\3\2\2\2\u0178\u0179\7h\2\2\u0179\u017a\7c\2\2\u017a\u017b\7n\2\2\u017b"+
		"\u017c\7u\2\2\u017c\u017d\7g\2\2\u017dr\3\2\2\2\u017e\u017f\7p\2\2\u017f"+
		"\u0180\7w\2\2\u0180\u0181\7n\2\2\u0181\u0182\7n\2\2\u0182t\3\2\2\2\u0183"+
		"\u0187\t\2\2\2\u0184\u0186\t\3\2\2\u0185\u0184\3\2\2\2\u0186\u0189\3\2"+
		"\2\2\u0187\u0185\3\2\2\2\u0187\u0188\3\2\2\2\u0188v\3\2\2\2\u0189\u0187"+
		"\3\2\2\2\u018a\u018c\4\62;\2\u018b\u018a\3\2\2\2\u018c\u018d\3\2\2\2\u018d"+
		"\u018b\3\2\2\2\u018d\u018e\3\2\2\2\u018ex\3\2\2\2\u018f\u0193\7$\2\2\u0190"+
		"\u0192\13\2\2\2\u0191\u0190\3\2\2\2\u0192\u0195\3\2\2\2\u0193\u0194\3"+
		"\2\2\2\u0193\u0191\3\2\2\2\u0194\u0196\3\2\2\2\u0195\u0193\3\2\2\2\u0196"+
		"\u0197\7$\2\2\u0197z\3\2\2\2\u0198\u019a\7\17\2\2\u0199\u0198\3\2\2\2"+
		"\u0199\u019a\3\2\2\2\u019a\u019b\3\2\2\2\u019b\u019c\7\f\2\2\u019c|\3"+
		"\2\2\2\u019d\u019f\t\4\2\2\u019e\u019d\3\2\2\2\u019f\u01a0\3\2\2\2\u01a0"+
		"\u019e\3\2\2\2\u01a0\u01a1\3\2\2\2\u01a1\u01a2\3\2\2\2\u01a2\u01a3\b?"+
		"\2\2\u01a3~\3\2\2\2\b\2\u0187\u018d\u0193\u0199\u01a0";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
	}
}